:PROPERTIES:
:ID:       da3ba898-3ec1-4b90-b327-8e381da18385
:END:
#+title: Vast Config
#+header-args:sh: :dir ../../

- tags :: [[id:d2c4f21f-816a-415b-9731-c20989a1dec2][Vast Config Files]]

* mkConfig
:PROPERTIES:
:ID:       99e10547-dd2a-418f-9df2-86c933fcb4b6
:END:

*mkConfig* is a function that helps you to write *vast.yaml* easily.

** example
** validation feature
:PROPERTIES:
:ID:       217afebd-d178-4b6d-891a-e220fc56cf28
:header-args:sh: :prologue "exec 2>&1" :epilogue ":"
:END:

Use [[https://github.com/divnix/yants][yants]] for humanized validation output of the type-checker

#+begin_src nix :exports both :results output
  validation-error =
    cell.lib.mkConfig {
      dataDir = "/tmp/vast";
      verbosity = "debug";
    } {
      #  write your custom configuration here
      # validation: error
      vast.store-backend = "archivee";
    };
#+end_src

*** std command:

#+begin_src sh :async :exports both :results output
std //vast/config/validation-error:explore
#+end_src

#+RESULTS:
: path '/home/gtrun/ghq/github.com/GTrunSec/vast2nix/docs/org' does not contain a 'flake.nix', searching up
: this derivation will be built:
:   /nix/store/axmw9gcrqsi00zvn255mrw35ppqf38ji-explore.drv
: building '/nix/store/axmw9gcrqsi00zvn255mrw35ppqf38ji-explore.drv'...
: error: Invalid value for store-backend: "archivee"
:        Valid values are: "segment-store, archive"
: (use '--show-trace' to show detailed location information)
: :


*** nix command:

#+begin_src sh :async :exports both :results output
nix build .\#x86_64-linux.vast.configFiles.validation-error
#+end_src

#+RESULTS:
: path '/home/gtrun/ghq/github.com/GTrunSec/vast2nix/docs/org' does not contain a 'flake.nix', searching up
: warning: Git tree '/home/gtrun/ghq/github.com/GTrunSec/vast2nix' is dirty
: error: Invalid value for store-backend: "archivee"
:        Valid values are: "segment-store, archive"
: (use '--show-trace' to show detailed location information)


* mkIntegration

** std command:

#+begin_src sh :async :exports both :results output
std //vast/configFiles/integration:explore
#+end_src

#+RESULTS:
: tests:
:   Node Zeek conn log:
:     steps:
:       command: -N import zeek
:       input: data/zeek/conn.log.gz
:     tags:
:     - node
:     - import-export
:     - zeek
** nix command:

#+begin_src sh :async :exports both :results output
cat $(nix build .\#x86_64-linux.vast.configFiles.integration --print-out-paths --no-link)
#+end_src

#+RESULTS:
: tests:
:   Node Zeek conn log:
:     steps:
:       command: -N import zeek
:       input: data/zeek/conn.log.gz
:     tags:
:     - node
:     - import-export
:     - zeek


* Code Location

#+begin_src nix :exports both :results output :tangle "../../nix/vast/config/default.nix"
{
  inputs,
  cell,
} @ args: let
  inherit (inputs.std) dmerge;
  inherit (cell) lib;
  inherit (inputs) nixpkgs std;
  inherit (inputs.cells-lab.main.lib) __inputs__;
  inherit (inputs.cells-lab.makes.lib) makeSubstitution;
  l = nixpkgs.lib // builtins;
in {
  default =
    cell.lib.mkConfig {
      dataDir = "/tmp/vast";
      verbosity = "debug";
    } {
      # add your custom settings here
      vast.store-backend = "archive";
    };

  validation-error =
    cell.lib.mkConfig {
      dataDir = "/tmp/vast";
      verbosity = "debug";
    } {
      # validation: error
      vast.store-backend = "archivee";
    };
}
#+end_src

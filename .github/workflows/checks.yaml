name: "CI"
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * SUN" # every sunday
jobs:
  nix-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      - uses: cachix/install-nix-action@v15
        with:
          install_url: https://github.com/numtide/nix-unstable-installer/releases/download/nix-2.5pre20211008_6bd74a6/install
          extra_nix_config: |
            experimental-features = nix-command flakes
            system-features = nixos-test benchmark big-parallel kvm recursive-nix

      - uses: cachix/cachix-action@v10
        with:
          name: zeek
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Run Flake Show
        run: nix -Lv flake show

      - name: Run nvfetcher
        run: |
          nix -Lv develop --command nvfetcher -l changelog

      - name: Build Release vast
        run: nix -Lv build .#vast-release
      - name: Check Release vast Exec
        run: nix run ./#vast-release -- --help

      - name: Build Latest vast
        run: nix -Lv build .#vast-latest
      - name: Check Latest vast Exec
        run: nix run ./#vast-latest -- --help
      - name: Check Latest vast Plugins
        run: nix run ./#vast-latest -- import -h

      - name: Build Release pyvast
        run: nix -Lv build .#pyvast

      - name: Build Latest pyvast
        run: nix -Lv build .#pyvast-latest
      # limited host resoure on github CI
      # - name: Check Vast with Systemd on NixOS-VM
      #   run: nix -Lv build .#vast-vm-systemd

      - name: COMMIT_MSG
        run: |
          changlog=$(find . -type f -name "changelog")
          if [[ ! -z "$(cat $changlog)" ]]; then
          echo "COMMIT_MSG<<EOF" >>$GITHUB_ENV
          echo "$(cat $changlog)" >>$GITHUB_ENV
          echo "EOF" >>$GITHUB_ENV
          rm -rf $changlog
          else
          rm -rf $changlog
          fi
      - name: Commit changes
        if: ${{ env.COMMIT_MSG != null }}
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: ${{ env.COMMIT_MSG }}
